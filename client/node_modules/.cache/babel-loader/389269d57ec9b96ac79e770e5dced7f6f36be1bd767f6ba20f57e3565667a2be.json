{"ast":null,"code":"var Promise = require('bluebird');\nvar Decrypt = require('../Decrypt');\nvar PullStream = require('../PullStream');\nvar Stream = require('stream');\nvar binary = require('binary');\nvar zlib = require('zlib');\nvar parseExtraField = require('../parseExtraField');\nvar Buffer = require('../Buffer');\nvar parseDateTime = require('../parseDateTime');\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy) Stream = require('readable-stream');\nmodule.exports = function unzip(source, offset, _password, directoryVars) {\n  var file = PullStream(),\n    entry = Stream.PassThrough();\n  var req = source.stream(offset);\n  req.pipe(file).on('error', function (e) {\n    entry.emit('error', e);\n  });\n  entry.vars = file.pull(30).then(function (data) {\n    var vars = binary.parse(data).word32lu('signature').word16lu('versionsNeededToExtract').word16lu('flags').word16lu('compressionMethod').word16lu('lastModifiedTime').word16lu('lastModifiedDate').word32lu('crc32').word32lu('compressedSize').word32lu('uncompressedSize').word16lu('fileNameLength').word16lu('extraFieldLength').vars;\n    vars.lastModifiedDateTime = parseDateTime(vars.lastModifiedDate, vars.lastModifiedTime);\n    return file.pull(vars.fileNameLength).then(function (fileName) {\n      vars.fileName = fileName.toString('utf8');\n      return file.pull(vars.extraFieldLength);\n    }).then(function (extraField) {\n      var checkEncryption;\n      vars.extra = parseExtraField(extraField, vars);\n      // Ignore logal file header vars if the directory vars are available\n      if (directoryVars && directoryVars.compressedSize) vars = directoryVars;\n      if (vars.flags & 0x01) checkEncryption = file.pull(12).then(function (header) {\n        if (!_password) throw new Error('MISSING_PASSWORD');\n        var decrypt = Decrypt();\n        String(_password).split('').forEach(function (d) {\n          decrypt.update(d);\n        });\n        for (var i = 0; i < header.length; i++) header[i] = decrypt.decryptByte(header[i]);\n        vars.decrypt = decrypt;\n        vars.compressedSize -= 12;\n        var check = vars.flags & 0x8 ? vars.lastModifiedTime >> 8 & 0xff : vars.crc32 >> 24 & 0xff;\n        if (header[11] !== check) throw new Error('BAD_PASSWORD');\n        return vars;\n      });\n      return Promise.resolve(checkEncryption).then(function () {\n        entry.emit('vars', vars);\n        return vars;\n      });\n    });\n  });\n  entry.vars.then(function (vars) {\n    var fileSizeKnown = !(vars.flags & 0x08) || vars.compressedSize > 0,\n      eof;\n    var inflater = vars.compressionMethod ? zlib.createInflateRaw() : Stream.PassThrough();\n    if (fileSizeKnown) {\n      entry.size = vars.uncompressedSize;\n      eof = vars.compressedSize;\n    } else {\n      eof = Buffer.alloc(4);\n      eof.writeUInt32LE(0x08074b50, 0);\n    }\n    var stream = file.stream(eof);\n    if (vars.decrypt) stream = stream.pipe(vars.decrypt.stream());\n    stream.pipe(inflater).on('error', function (err) {\n      entry.emit('error', err);\n    }).pipe(entry).on('finish', function () {\n      if (req.destroy) req.destroy();else if (req.abort) req.abort();else if (req.close) req.close();else if (req.push) req.push();else console.log('warning - unable to close stream');\n    });\n  }).catch(function (e) {\n    entry.emit('error', e);\n  });\n  return entry;\n};","map":{"version":3,"names":["Promise","require","Decrypt","PullStream","Stream","binary","zlib","parseExtraField","Buffer","parseDateTime","Writable","prototype","destroy","module","exports","unzip","source","offset","_password","directoryVars","file","entry","PassThrough","req","stream","pipe","on","e","emit","vars","pull","then","data","parse","word32lu","word16lu","lastModifiedDateTime","lastModifiedDate","lastModifiedTime","fileNameLength","fileName","toString","extraFieldLength","extraField","checkEncryption","extra","compressedSize","flags","header","Error","decrypt","String","split","forEach","d","update","i","length","decryptByte","check","crc32","resolve","fileSizeKnown","eof","inflater","compressionMethod","createInflateRaw","size","uncompressedSize","alloc","writeUInt32LE","err","abort","close","push","console","log","catch"],"sources":["/Users/dangnghia/Documents/vizion/file-uploader/client/node_modules/unzipper/lib/Open/unzip.js"],"sourcesContent":["var Promise = require('bluebird');\nvar Decrypt = require('../Decrypt');\nvar PullStream = require('../PullStream');\nvar Stream = require('stream');\nvar binary = require('binary');\nvar zlib = require('zlib');\nvar parseExtraField = require('../parseExtraField');\nvar Buffer = require('../Buffer');\nvar parseDateTime = require('../parseDateTime');\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = require('readable-stream');\n\nmodule.exports = function unzip(source,offset,_password, directoryVars) {\n  var file = PullStream(),\n      entry = Stream.PassThrough();\n\n  var req = source.stream(offset);\n  req.pipe(file).on('error', function(e) {\n    entry.emit('error', e);\n  });\n\n  entry.vars = file.pull(30)\n    .then(function(data) {\n      var vars = binary.parse(data)\n        .word32lu('signature')\n        .word16lu('versionsNeededToExtract')\n        .word16lu('flags')\n        .word16lu('compressionMethod')\n        .word16lu('lastModifiedTime')\n        .word16lu('lastModifiedDate')\n        .word32lu('crc32')\n        .word32lu('compressedSize')\n        .word32lu('uncompressedSize')\n        .word16lu('fileNameLength')\n        .word16lu('extraFieldLength')\n        .vars;\n\n      vars.lastModifiedDateTime = parseDateTime(vars.lastModifiedDate, vars.lastModifiedTime);\n\n      return file.pull(vars.fileNameLength)\n        .then(function(fileName) {\n          vars.fileName = fileName.toString('utf8');\n          return file.pull(vars.extraFieldLength);\n        })\n        .then(function(extraField) {\n          var checkEncryption;\n          vars.extra = parseExtraField(extraField, vars);\n          // Ignore logal file header vars if the directory vars are available\n          if (directoryVars && directoryVars.compressedSize) vars = directoryVars;\n\n          if (vars.flags & 0x01) checkEncryption = file.pull(12)\n            .then(function(header) {\n              if (!_password)\n                throw new Error('MISSING_PASSWORD');\n\n              var decrypt = Decrypt();\n\n              String(_password).split('').forEach(function(d) {\n                decrypt.update(d);\n              });\n\n              for (var i=0; i < header.length; i++)\n                header[i] = decrypt.decryptByte(header[i]);\n\n              vars.decrypt = decrypt;\n              vars.compressedSize -= 12;\n\n              var check = (vars.flags & 0x8) ? (vars.lastModifiedTime >> 8) & 0xff : (vars.crc32 >> 24) & 0xff;\n              if (header[11] !== check)\n                throw new Error('BAD_PASSWORD');\n\n              return vars;\n            });\n\n          return Promise.resolve(checkEncryption)\n            .then(function() {\n              entry.emit('vars',vars);\n              return vars;\n            });\n        });\n    });\n\n    entry.vars.then(function(vars) {\n      var fileSizeKnown = !(vars.flags & 0x08) || vars.compressedSize > 0,\n          eof;\n\n      var inflater = vars.compressionMethod ? zlib.createInflateRaw() : Stream.PassThrough();\n\n      if (fileSizeKnown) {\n        entry.size = vars.uncompressedSize;\n        eof = vars.compressedSize;\n      } else {\n        eof = Buffer.alloc(4);\n        eof.writeUInt32LE(0x08074b50, 0);\n      }\n\n      var stream = file.stream(eof);\n\n      if (vars.decrypt)\n        stream = stream.pipe(vars.decrypt.stream());\n\n      stream\n        .pipe(inflater)\n        .on('error',function(err) { entry.emit('error',err);})\n        .pipe(entry)\n        .on('finish', function() {\n          if(req.destroy)\n            req.destroy()\n          else if (req.abort)\n            req.abort();\n          else if (req.close)\n            req.close();\n          else if (req.push)\n            req.push();\n          else\n            console.log('warning - unable to close stream');\n        });\n    })\n    .catch(function(e) {\n      entry.emit('error',e);\n    });\n\n  return entry;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}