{"ast":null,"code":"var _jsxFileName = \"/Users/dangnghia/Documents/vizion/file-uploader/client/src/components/Preview/index.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Preview = ({\n  setSelectedRow\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"//localhost:8000/get\");\n        if (response.status !== 200) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = response.data;\n        if (result.success) {\n          setData(result.data);\n        } else {\n          setError(result.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []); // Chạy một lần khi component được mount\n\n  const columns = [{\n    name: \"Id\",\n    selector: row => row.Id\n  }, {\n    name: \"FirstName\",\n    selector: row => row.FirstName\n  }, {\n    name: \"LastName\",\n    selector: row => row.LastName\n  }, {\n    name: \"Gender\",\n    selector: row => row.Gender\n  }, {\n    name: \"Country\",\n    selector: row => row.Country\n  }, {\n    name: \"Age\",\n    selector: row => row.Age\n  }, {\n    name: \"Date\",\n    selector: row => row.Date\n  }];\n  const handleOnSelectChanged = useCallback(({\n    selectedRows\n  }) => {\n    console.log(selectedRows);\n    setSelectedRow(selectedRows);\n  }, [setSelectedRow]);\n  if (!data) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        margin: \"40px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        noHeader: true,\n        columns: columns,\n        data: data,\n        pagination: true,\n        selectableRows: true,\n        onSelectedRowsChange: handleOnSelectChanged,\n        selectableRowsSingle: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Preview, \"X6Za4vx3dhrhzVpsO/V+Ld/FC3M=\");\n_c = Preview;\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["axios","useCallback","useEffect","useState","DataTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Preview","setSelectedRow","_s","data","setData","loading","setLoading","error","setError","fetchData","response","get","status","Error","result","success","message","columns","name","selector","row","Id","FirstName","LastName","Gender","Country","Age","Date","handleOnSelectChanged","selectedRows","console","log","children","style","border","margin","noHeader","pagination","selectableRows","onSelectedRowsChange","selectableRowsSingle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dangnghia/Documents/vizion/file-uploader/client/src/components/Preview/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\n\nexport const Preview = ({ setSelectedRow }) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"//localhost:8000/get\");\n        if (response.status !== 200) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = response.data;\n        if (result.success) {\n          setData(result.data);\n        } else {\n          setError(result.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []); // Chạy một lần khi component được mount\n\n  const columns = [\n    {\n      name: \"Id\",\n      selector: (row) => row.Id,\n    },\n    {\n      name: \"FirstName\",\n      selector: (row) => row.FirstName,\n    },\n    {\n      name: \"LastName\",\n      selector: (row) => row.LastName,\n    },\n    {\n      name: \"Gender\",\n      selector: (row) => row.Gender,\n    },\n    {\n      name: \"Country\",\n      selector: (row) => row.Country,\n    },\n    {\n      name: \"Age\",\n      selector: (row) => row.Age,\n    },\n    {\n      name: \"Date\",\n      selector: (row) => row.Date,\n    },\n  ];\n\n  const handleOnSelectChanged = useCallback(\n    ({ selectedRows }) => {\n      console.log(selectedRows);\n      setSelectedRow(selectedRows);\n    },\n    [setSelectedRow]\n  );\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <>\n      <div style={{ border: \"1px solid black\", margin: \"40px\" }}>\n        <DataTable\n          noHeader\n          columns={columns}\n          data={data}\n          pagination={true}\n          selectableRows\n          onSelectedRowsChange={handleOnSelectChanged}\n          selectableRowsSingle\n        />\n      </div>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}