{"ast":null,"code":"import { getWorkbookProperties, getSheets } from '../xml/xlsx.js'; // I guess `xl/workbook.xml` file should always be present inside the *.xlsx archive.\n\nexport default function parseProperties(content, xml) {\n  var book = xml.createDocument(content);\n  var properties = {}; // Read `<workbookPr/>` element to detect whether dates are 1900-based or 1904-based.\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/workbookPr.html\n\n  var workbookProperties = getWorkbookProperties(book);\n  if (workbookProperties && workbookProperties.getAttribute('date1904') === '1') {\n    properties.epoch1904 = true;\n  } // Get sheets info (indexes, names, if they're available).\n  // Example:\n  // <sheets>\n  //   <sheet\n  //     xmlns:ns=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\n  //     name=\"Sheet1\"\n  //     sheetId=\"1\"\n  //     ns:id=\"rId3\"/>\n  // </sheets>\n  // http://www.datypic.com/sc/ooxml/e-ssml_sheet-1.html\n\n  properties.sheets = [];\n  var addSheetInfo = function addSheetInfo(sheet) {\n    if (sheet.getAttribute('name')) {\n      properties.sheets.push({\n        id: sheet.getAttribute('sheetId'),\n        name: sheet.getAttribute('name'),\n        relationId: sheet.getAttribute('r:id')\n      });\n    }\n  };\n  getSheets(book).forEach(addSheetInfo);\n  return properties;\n}","map":{"version":3,"names":["getWorkbookProperties","getSheets","parseProperties","content","xml","book","createDocument","properties","workbookProperties","getAttribute","epoch1904","sheets","addSheetInfo","sheet","push","id","name","relationId","forEach"],"sources":["/Users/dangnghia/Documents/vizion/file-uploader/client/node_modules/read-excel-file/source/read/parseProperties.js"],"sourcesContent":["import {\r\n  getWorkbookProperties,\r\n  getSheets\r\n} from '../xml/xlsx.js'\r\n\r\n// I guess `xl/workbook.xml` file should always be present inside the *.xlsx archive.\r\nexport default function parseProperties(content, xml) {\r\n  const book = xml.createDocument(content)\r\n\r\n  const properties = {};\r\n\r\n  // Read `<workbookPr/>` element to detect whether dates are 1900-based or 1904-based.\r\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\r\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/workbookPr.html\r\n\r\n  const workbookProperties = getWorkbookProperties(book)\r\n\r\n  if (workbookProperties && workbookProperties.getAttribute('date1904') === '1') {\r\n    properties.epoch1904 = true\r\n  }\r\n\r\n  // Get sheets info (indexes, names, if they're available).\r\n  // Example:\r\n  // <sheets>\r\n  //   <sheet\r\n  //     xmlns:ns=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\r\n  //     name=\"Sheet1\"\r\n  //     sheetId=\"1\"\r\n  //     ns:id=\"rId3\"/>\r\n  // </sheets>\r\n  // http://www.datypic.com/sc/ooxml/e-ssml_sheet-1.html\r\n\r\n  properties.sheets = []\r\n\r\n  const addSheetInfo = (sheet) => {\r\n    if (sheet.getAttribute('name')) {\r\n      properties.sheets.push({\r\n        id: sheet.getAttribute('sheetId'),\r\n        name: sheet.getAttribute('name'),\r\n        relationId: sheet.getAttribute('r:id')\r\n      })\r\n    }\r\n  }\r\n\r\n  getSheets(book).forEach(addSheetInfo)\r\n\r\n  return properties;\r\n}"],"mappings":"AAAA,SACEA,qBADF,EAEEC,SAFF,QAGO,gBAHP,C,CAKA;;AACA,eAAe,SAASC,eAATA,CAAyBC,OAAzB,EAAkCC,GAAlC,EAAuC;EACpD,IAAMC,IAAI,GAAGD,GAAG,CAACE,cAAJ,CAAmBH,OAAnB,CAAb;EAEA,IAAMI,UAAU,GAAG,EAAnB,CAHoD,CAKpD;EACA;EACA;;EAEA,IAAMC,kBAAkB,GAAGR,qBAAqB,CAACK,IAAD,CAAhD;EAEA,IAAIG,kBAAkB,IAAIA,kBAAkB,CAACC,YAAnB,CAAgC,UAAhC,MAAgD,GAA1E,EAA+E;IAC7EF,UAAU,CAACG,SAAX,GAAuB,IAAvB;EACD,CAbmD,CAepD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAH,UAAU,CAACI,MAAX,GAAoB,EAApB;EAEA,IAAMC,YAAY,GAAG,SAAfA,YAAeA,CAACC,KAAD,EAAW;IAC9B,IAAIA,KAAK,CAACJ,YAAN,CAAmB,MAAnB,CAAJ,EAAgC;MAC9BF,UAAU,CAACI,MAAX,CAAkBG,IAAlB,CAAuB;QACrBC,EAAE,EAAEF,KAAK,CAACJ,YAAN,CAAmB,SAAnB,CADiB;QAErBO,IAAI,EAAEH,KAAK,CAACJ,YAAN,CAAmB,MAAnB,CAFe;QAGrBQ,UAAU,EAAEJ,KAAK,CAACJ,YAAN,CAAmB,MAAnB;MAHS,CAAvB;IAKD;EACF,CARD;EAUAR,SAAS,CAACI,IAAD,CAAT,CAAgBa,OAAhB,CAAwBN,YAAxB;EAEA,OAAOL,UAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}