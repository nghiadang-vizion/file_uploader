{"ast":null,"code":"var _jsxFileName = \"/Users/dangnghia/Documents/vizion/file-uploader/client/src/components/Preview/index.js\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport sqlite3 from \"sqlite3\";\nimport { open } from \"sqlite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction convertArrayToObject(arr) {\n  const headers = arr[0];\n  const data = arr.slice(1);\n  const result = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentItem = data[i];\n    const currentObject = {};\n    for (let j = 0; j < headers.length; j++) {\n      const key = isNaN(headers[j]) ? headers[j].replace(/\\s+/g, \"\") : j;\n      currentObject[key] = currentItem[j];\n    }\n    result.push(currentObject);\n  }\n  return result;\n}\nexport const Preview = ({\n  files\n}) => {\n  console.log(\"ðŸš€ ~ file: index.js:2 ~ Preview ~ files:\", files);\n  if (!files) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: `${files.filename}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Preview;\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["useCallback","useEffect","useMemo","sqlite3","open","jsxDEV","_jsxDEV","Fragment","_Fragment","convertArrayToObject","arr","headers","data","slice","result","i","length","currentItem","currentObject","j","key","isNaN","replace","push","Preview","files","console","log","children","filename","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dangnghia/Documents/vizion/file-uploader/client/src/components/Preview/index.js"],"sourcesContent":["import { useCallback, useEffect, useMemo } from \"react\";\nimport sqlite3 from \"sqlite3\";\nimport { open } from \"sqlite\";\n\nfunction convertArrayToObject(arr) {\n  const headers = arr[0];\n  const data = arr.slice(1);\n  const result = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentItem = data[i];\n    const currentObject = {};\n    for (let j = 0; j < headers.length; j++) {\n      const key = isNaN(headers[j]) ? headers[j].replace(/\\s+/g, \"\") : j;\n      currentObject[key] = currentItem[j];\n    }\n    result.push(currentObject);\n  }\n  return result;\n}\n\nexport const Preview = ({ files }) => {\n  console.log(\"ðŸš€ ~ file: index.js:2 ~ Preview ~ files:\", files);\n  if (!files) {\n    return null;\n  }\n\n  return (\n    <>\n      <span>{`${files.filename}`}</span>\n      <br></br>\n    </>\n  );\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACvD,OAAOC,OAAO,MAAM,SAAS;AAC7B,SAASC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,SAASC,oBAAoBA,CAACC,GAAG,EAAE;EACjC,MAAMC,OAAO,GAAGD,GAAG,CAAC,CAAC,CAAC;EACtB,MAAME,IAAI,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC;EACzB,MAAMC,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAME,WAAW,GAAGL,IAAI,CAACG,CAAC,CAAC;IAC3B,MAAMG,aAAa,GAAG,CAAC,CAAC;IACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,OAAO,CAACK,MAAM,EAAEG,CAAC,EAAE,EAAE;MACvC,MAAMC,GAAG,GAAGC,KAAK,CAACV,OAAO,CAACQ,CAAC,CAAC,CAAC,GAAGR,OAAO,CAACQ,CAAC,CAAC,CAACG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAGH,CAAC;MAClED,aAAa,CAACE,GAAG,CAAC,GAAGH,WAAW,CAACE,CAAC,CAAC;IACrC;IACAL,MAAM,CAACS,IAAI,CAACL,aAAa,CAAC;EAC5B;EACA,OAAOJ,MAAM;AACf;AAEA,OAAO,MAAMU,OAAO,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACpCC,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEF,KAAK,CAAC;EAC9D,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EAEA,oBACEnB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAQ,GAAEH,KAAK,CAACI,QAAS;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClC3B,OAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAACC,EAAA,GAZWV,OAAO;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}