{"ast":null,"code":"// Just get the stats, and then don't do anything.\n// You can't really \"read\" from a socket.  You \"connect\" to it.\n// Mostly, this is here so that reading a dir with a socket in it\n// doesn't blow up.\n\nmodule.exports = SocketReader;\nvar inherits = require('inherits');\nvar Reader = require('./reader.js');\ninherits(SocketReader, Reader);\nfunction SocketReader(props) {\n  var self = this;\n  if (!(self instanceof SocketReader)) {\n    throw new Error('SocketReader must be called as constructor.');\n  }\n  if (!(props.type === 'Socket' && props.Socket)) {\n    throw new Error('Non-socket type ' + props.type);\n  }\n  Reader.call(self, props);\n}\nSocketReader.prototype._read = function () {\n  var self = this;\n  if (self._paused) return;\n  // basically just a no-op, since we got all the info we have\n  // from the _stat method\n  if (!self._ended) {\n    self.emit('end');\n    self.emit('close');\n    self._ended = true;\n  }\n};","map":{"version":3,"names":["module","exports","SocketReader","inherits","require","Reader","props","self","Error","type","Socket","call","prototype","_read","_paused","_ended","emit"],"sources":["/Users/dangnghia/Documents/vizion/file-uploader/client/node_modules/fstream/lib/socket-reader.js"],"sourcesContent":["// Just get the stats, and then don't do anything.\n// You can't really \"read\" from a socket.  You \"connect\" to it.\n// Mostly, this is here so that reading a dir with a socket in it\n// doesn't blow up.\n\nmodule.exports = SocketReader\n\nvar inherits = require('inherits')\nvar Reader = require('./reader.js')\n\ninherits(SocketReader, Reader)\n\nfunction SocketReader (props) {\n  var self = this\n  if (!(self instanceof SocketReader)) {\n    throw new Error('SocketReader must be called as constructor.')\n  }\n\n  if (!(props.type === 'Socket' && props.Socket)) {\n    throw new Error('Non-socket type ' + props.type)\n  }\n\n  Reader.call(self, props)\n}\n\nSocketReader.prototype._read = function () {\n  var self = this\n  if (self._paused) return\n  // basically just a no-op, since we got all the info we have\n  // from the _stat method\n  if (!self._ended) {\n    self.emit('end')\n    self.emit('close')\n    self._ended = true\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAGC,YAAY;AAE7B,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEnCD,QAAQ,CAACD,YAAY,EAAEG,MAAM,CAAC;AAE9B,SAASH,YAAYA,CAAEI,KAAK,EAAE;EAC5B,IAAIC,IAAI,GAAG,IAAI;EACf,IAAI,EAAEA,IAAI,YAAYL,YAAY,CAAC,EAAE;IACnC,MAAM,IAAIM,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,IAAI,EAAEF,KAAK,CAACG,IAAI,KAAK,QAAQ,IAAIH,KAAK,CAACI,MAAM,CAAC,EAAE;IAC9C,MAAM,IAAIF,KAAK,CAAC,kBAAkB,GAAGF,KAAK,CAACG,IAAI,CAAC;EAClD;EAEAJ,MAAM,CAACM,IAAI,CAACJ,IAAI,EAAED,KAAK,CAAC;AAC1B;AAEAJ,YAAY,CAACU,SAAS,CAACC,KAAK,GAAG,YAAY;EACzC,IAAIN,IAAI,GAAG,IAAI;EACf,IAAIA,IAAI,CAACO,OAAO,EAAE;EAClB;EACA;EACA,IAAI,CAACP,IAAI,CAACQ,MAAM,EAAE;IAChBR,IAAI,CAACS,IAAI,CAAC,KAAK,CAAC;IAChBT,IAAI,CAACS,IAAI,CAAC,OAAO,CAAC;IAClBT,IAAI,CAACQ,MAAM,GAAG,IAAI;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}