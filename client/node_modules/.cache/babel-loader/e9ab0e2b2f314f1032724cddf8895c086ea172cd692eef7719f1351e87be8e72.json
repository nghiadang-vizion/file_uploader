{"ast":null,"code":"import readXlsxFile from './readXlsxFileNode.js';\n/**\r\n * Reads the list of sheet names in an XLSX file in Node.js.\r\n * @param  {(string|Stream|Buffer)} input - A Node.js readable stream or a `Buffer` or a path to a file.\r\n * @return {Promise} Resolves to an array of objects of shape `{ name: string }`.\r\n */\n\nexport default function readSheetNames(input) {\n  return readXlsxFile(input, {\n    getSheets: true\n  }).then(function (sheets) {\n    return sheets.map(function (sheet) {\n      return sheet.name;\n    });\n  });\n}","map":{"version":3,"names":["readXlsxFile","readSheetNames","input","getSheets","then","sheets","map","sheet","name"],"sources":["/Users/dangnghia/Documents/vizion/file-uploader/client/node_modules/read-excel-file/source/read/readSheetNamesNode.js"],"sourcesContent":["import readXlsxFile from './readXlsxFileNode.js'\r\n\r\n/**\r\n * Reads the list of sheet names in an XLSX file in Node.js.\r\n * @param  {(string|Stream|Buffer)} input - A Node.js readable stream or a `Buffer` or a path to a file.\r\n * @return {Promise} Resolves to an array of objects of shape `{ name: string }`.\r\n */\r\nexport default function readSheetNames(input) {\r\n\treturn readXlsxFile(input, { getSheets: true })\r\n\t\t.then(sheets => sheets.map(sheet => sheet.name))\r\n}"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,cAATA,CAAwBC,KAAxB,EAA+B;EAC7C,OAAOF,YAAY,CAACE,KAAD,EAAQ;IAAEC,SAAS,EAAE;EAAb,CAAR,CAAZ,CACLC,IADK,CACA,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK;MAAA,OAAIA,KAAK,CAACC,IAAV;IAAA,CAAhB,CAAJ;EAAA,CADN,CAAP;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}