{"ast":null,"code":"// A thing that emits \"entry\" events with Reader objects\n// Pausing it causes it to stop emitting entry events, and also\n// pauses the current entry if there is one.\n\nmodule.exports = DirReader;\nvar fs = require('graceful-fs');\nvar inherits = require('inherits');\nvar path = require('path');\nvar Reader = require('./reader.js');\nvar assert = require('assert').ok;\ninherits(DirReader, Reader);\nfunction DirReader(props) {\n  var self = this;\n  if (!(self instanceof DirReader)) {\n    throw new Error('DirReader must be called as constructor.');\n  }\n\n  // should already be established as a Directory type\n  if (props.type !== 'Directory' || !props.Directory) {\n    throw new Error('Non-directory type ' + props.type);\n  }\n  self.entries = null;\n  self._index = -1;\n  self._paused = false;\n  self._length = -1;\n  if (props.sort) {\n    this.sort = props.sort;\n  }\n  Reader.call(this, props);\n}\nDirReader.prototype._getEntries = function () {\n  var self = this;\n\n  // race condition.  might pause() before calling _getEntries,\n  // and then resume, and try to get them a second time.\n  if (self._gotEntries) return;\n  self._gotEntries = true;\n  fs.readdir(self._path, function (er, entries) {\n    if (er) return self.error(er);\n    self.entries = entries;\n    self.emit('entries', entries);\n    if (self._paused) self.once('resume', processEntries);else processEntries();\n    function processEntries() {\n      self._length = self.entries.length;\n      if (typeof self.sort === 'function') {\n        self.entries = self.entries.sort(self.sort.bind(self));\n      }\n      self._read();\n    }\n  });\n};\n\n// start walking the dir, and emit an \"entry\" event for each one.\nDirReader.prototype._read = function () {\n  var self = this;\n  if (!self.entries) return self._getEntries();\n  if (self._paused || self._currentEntry || self._aborted) {\n    // console.error('DR paused=%j, current=%j, aborted=%j', self._paused, !!self._currentEntry, self._aborted)\n    return;\n  }\n  self._index++;\n  if (self._index >= self.entries.length) {\n    if (!self._ended) {\n      self._ended = true;\n      self.emit('end');\n      self.emit('close');\n    }\n    return;\n  }\n\n  // ok, handle this one, then.\n\n  // save creating a proxy, by stat'ing the thing now.\n  var p = path.resolve(self._path, self.entries[self._index]);\n  assert(p !== self._path);\n  assert(self.entries[self._index]);\n\n  // set this to prevent trying to _read() again in the stat time.\n  self._currentEntry = p;\n  fs[self.props.follow ? 'stat' : 'lstat'](p, function (er, stat) {\n    if (er) return self.error(er);\n    var who = self._proxy || self;\n    stat.path = p;\n    stat.basename = path.basename(p);\n    stat.dirname = path.dirname(p);\n    var childProps = self.getChildProps.call(who, stat);\n    childProps.path = p;\n    childProps.basename = path.basename(p);\n    childProps.dirname = path.dirname(p);\n    var entry = Reader(childProps, stat);\n\n    // console.error(\"DR Entry\", p, stat.size)\n\n    self._currentEntry = entry;\n\n    // \"entry\" events are for direct entries in a specific dir.\n    // \"child\" events are for any and all children at all levels.\n    // This nomenclature is not completely final.\n\n    entry.on('pause', function (who) {\n      if (!self._paused && !entry._disowned) {\n        self.pause(who);\n      }\n    });\n    entry.on('resume', function (who) {\n      if (self._paused && !entry._disowned) {\n        self.resume(who);\n      }\n    });\n    entry.on('stat', function (props) {\n      self.emit('_entryStat', entry, props);\n      if (entry._aborted) return;\n      if (entry._paused) {\n        entry.once('resume', function () {\n          self.emit('entryStat', entry, props);\n        });\n      } else self.emit('entryStat', entry, props);\n    });\n    entry.on('ready', function EMITCHILD() {\n      // console.error(\"DR emit child\", entry._path)\n      if (self._paused) {\n        // console.error(\"  DR emit child - try again later\")\n        // pause the child, and emit the \"entry\" event once we drain.\n        // console.error(\"DR pausing child entry\")\n        entry.pause(self);\n        return self.once('resume', EMITCHILD);\n      }\n\n      // skip over sockets.  they can't be piped around properly,\n      // so there's really no sense even acknowledging them.\n      // if someone really wants to see them, they can listen to\n      // the \"socket\" events.\n      if (entry.type === 'Socket') {\n        self.emit('socket', entry);\n      } else {\n        self.emitEntry(entry);\n      }\n    });\n    var ended = false;\n    entry.on('close', onend);\n    entry.on('disown', onend);\n    function onend() {\n      if (ended) return;\n      ended = true;\n      self.emit('childEnd', entry);\n      self.emit('entryEnd', entry);\n      self._currentEntry = null;\n      if (!self._paused) {\n        self._read();\n      }\n    }\n\n    // XXX Remove this.  Works in node as of 0.6.2 or so.\n    // Long filenames should not break stuff.\n    entry.on('error', function (er) {\n      if (entry._swallowErrors) {\n        self.warn(er);\n        entry.emit('end');\n        entry.emit('close');\n      } else {\n        self.emit('error', er);\n      }\n    })\n\n    // proxy up some events.\n    ;\n    ['child', 'childEnd', 'warn'].forEach(function (ev) {\n      entry.on(ev, self.emit.bind(self, ev));\n    });\n  });\n};\nDirReader.prototype.disown = function (entry) {\n  entry.emit('beforeDisown');\n  entry._disowned = true;\n  entry.parent = entry.root = null;\n  if (entry === this._currentEntry) {\n    this._currentEntry = null;\n  }\n  entry.emit('disown');\n};\nDirReader.prototype.getChildProps = function () {\n  return {\n    depth: this.depth + 1,\n    root: this.root || this,\n    parent: this,\n    follow: this.follow,\n    filter: this.filter,\n    sort: this.props.sort,\n    hardlinks: this.props.hardlinks\n  };\n};\nDirReader.prototype.pause = function (who) {\n  var self = this;\n  if (self._paused) return;\n  who = who || self;\n  self._paused = true;\n  if (self._currentEntry && self._currentEntry.pause) {\n    self._currentEntry.pause(who);\n  }\n  self.emit('pause', who);\n};\nDirReader.prototype.resume = function (who) {\n  var self = this;\n  if (!self._paused) return;\n  who = who || self;\n  self._paused = false;\n  // console.error('DR Emit Resume', self._path)\n  self.emit('resume', who);\n  if (self._paused) {\n    // console.error('DR Re-paused', self._path)\n    return;\n  }\n  if (self._currentEntry) {\n    if (self._currentEntry.resume) self._currentEntry.resume(who);\n  } else self._read();\n};\nDirReader.prototype.emitEntry = function (entry) {\n  this.emit('entry', entry);\n  this.emit('child', entry);\n};","map":{"version":3,"names":["module","exports","DirReader","fs","require","inherits","path","Reader","assert","ok","props","self","Error","type","Directory","entries","_index","_paused","_length","sort","call","prototype","_getEntries","_gotEntries","readdir","_path","er","error","emit","once","processEntries","length","bind","_read","_currentEntry","_aborted","_ended","p","resolve","follow","stat","who","_proxy","basename","dirname","childProps","getChildProps","entry","on","_disowned","pause","resume","EMITCHILD","emitEntry","ended","onend","_swallowErrors","warn","forEach","ev","disown","parent","root","depth","filter","hardlinks"],"sources":["/Users/dangnghia/Documents/vizion/file-uploader/client/node_modules/fstream/lib/dir-reader.js"],"sourcesContent":["// A thing that emits \"entry\" events with Reader objects\n// Pausing it causes it to stop emitting entry events, and also\n// pauses the current entry if there is one.\n\nmodule.exports = DirReader\n\nvar fs = require('graceful-fs')\nvar inherits = require('inherits')\nvar path = require('path')\nvar Reader = require('./reader.js')\nvar assert = require('assert').ok\n\ninherits(DirReader, Reader)\n\nfunction DirReader (props) {\n  var self = this\n  if (!(self instanceof DirReader)) {\n    throw new Error('DirReader must be called as constructor.')\n  }\n\n  // should already be established as a Directory type\n  if (props.type !== 'Directory' || !props.Directory) {\n    throw new Error('Non-directory type ' + props.type)\n  }\n\n  self.entries = null\n  self._index = -1\n  self._paused = false\n  self._length = -1\n\n  if (props.sort) {\n    this.sort = props.sort\n  }\n\n  Reader.call(this, props)\n}\n\nDirReader.prototype._getEntries = function () {\n  var self = this\n\n  // race condition.  might pause() before calling _getEntries,\n  // and then resume, and try to get them a second time.\n  if (self._gotEntries) return\n  self._gotEntries = true\n\n  fs.readdir(self._path, function (er, entries) {\n    if (er) return self.error(er)\n\n    self.entries = entries\n\n    self.emit('entries', entries)\n    if (self._paused) self.once('resume', processEntries)\n    else processEntries()\n\n    function processEntries () {\n      self._length = self.entries.length\n      if (typeof self.sort === 'function') {\n        self.entries = self.entries.sort(self.sort.bind(self))\n      }\n      self._read()\n    }\n  })\n}\n\n// start walking the dir, and emit an \"entry\" event for each one.\nDirReader.prototype._read = function () {\n  var self = this\n\n  if (!self.entries) return self._getEntries()\n\n  if (self._paused || self._currentEntry || self._aborted) {\n    // console.error('DR paused=%j, current=%j, aborted=%j', self._paused, !!self._currentEntry, self._aborted)\n    return\n  }\n\n  self._index++\n  if (self._index >= self.entries.length) {\n    if (!self._ended) {\n      self._ended = true\n      self.emit('end')\n      self.emit('close')\n    }\n    return\n  }\n\n  // ok, handle this one, then.\n\n  // save creating a proxy, by stat'ing the thing now.\n  var p = path.resolve(self._path, self.entries[self._index])\n  assert(p !== self._path)\n  assert(self.entries[self._index])\n\n  // set this to prevent trying to _read() again in the stat time.\n  self._currentEntry = p\n  fs[ self.props.follow ? 'stat' : 'lstat' ](p, function (er, stat) {\n    if (er) return self.error(er)\n\n    var who = self._proxy || self\n\n    stat.path = p\n    stat.basename = path.basename(p)\n    stat.dirname = path.dirname(p)\n    var childProps = self.getChildProps.call(who, stat)\n    childProps.path = p\n    childProps.basename = path.basename(p)\n    childProps.dirname = path.dirname(p)\n\n    var entry = Reader(childProps, stat)\n\n    // console.error(\"DR Entry\", p, stat.size)\n\n    self._currentEntry = entry\n\n    // \"entry\" events are for direct entries in a specific dir.\n    // \"child\" events are for any and all children at all levels.\n    // This nomenclature is not completely final.\n\n    entry.on('pause', function (who) {\n      if (!self._paused && !entry._disowned) {\n        self.pause(who)\n      }\n    })\n\n    entry.on('resume', function (who) {\n      if (self._paused && !entry._disowned) {\n        self.resume(who)\n      }\n    })\n\n    entry.on('stat', function (props) {\n      self.emit('_entryStat', entry, props)\n      if (entry._aborted) return\n      if (entry._paused) {\n        entry.once('resume', function () {\n          self.emit('entryStat', entry, props)\n        })\n      } else self.emit('entryStat', entry, props)\n    })\n\n    entry.on('ready', function EMITCHILD () {\n      // console.error(\"DR emit child\", entry._path)\n      if (self._paused) {\n        // console.error(\"  DR emit child - try again later\")\n        // pause the child, and emit the \"entry\" event once we drain.\n        // console.error(\"DR pausing child entry\")\n        entry.pause(self)\n        return self.once('resume', EMITCHILD)\n      }\n\n      // skip over sockets.  they can't be piped around properly,\n      // so there's really no sense even acknowledging them.\n      // if someone really wants to see them, they can listen to\n      // the \"socket\" events.\n      if (entry.type === 'Socket') {\n        self.emit('socket', entry)\n      } else {\n        self.emitEntry(entry)\n      }\n    })\n\n    var ended = false\n    entry.on('close', onend)\n    entry.on('disown', onend)\n    function onend () {\n      if (ended) return\n      ended = true\n      self.emit('childEnd', entry)\n      self.emit('entryEnd', entry)\n      self._currentEntry = null\n      if (!self._paused) {\n        self._read()\n      }\n    }\n\n    // XXX Remove this.  Works in node as of 0.6.2 or so.\n    // Long filenames should not break stuff.\n    entry.on('error', function (er) {\n      if (entry._swallowErrors) {\n        self.warn(er)\n        entry.emit('end')\n        entry.emit('close')\n      } else {\n        self.emit('error', er)\n      }\n    })\n\n    // proxy up some events.\n    ;[\n      'child',\n      'childEnd',\n      'warn'\n    ].forEach(function (ev) {\n      entry.on(ev, self.emit.bind(self, ev))\n    })\n  })\n}\n\nDirReader.prototype.disown = function (entry) {\n  entry.emit('beforeDisown')\n  entry._disowned = true\n  entry.parent = entry.root = null\n  if (entry === this._currentEntry) {\n    this._currentEntry = null\n  }\n  entry.emit('disown')\n}\n\nDirReader.prototype.getChildProps = function () {\n  return {\n    depth: this.depth + 1,\n    root: this.root || this,\n    parent: this,\n    follow: this.follow,\n    filter: this.filter,\n    sort: this.props.sort,\n    hardlinks: this.props.hardlinks\n  }\n}\n\nDirReader.prototype.pause = function (who) {\n  var self = this\n  if (self._paused) return\n  who = who || self\n  self._paused = true\n  if (self._currentEntry && self._currentEntry.pause) {\n    self._currentEntry.pause(who)\n  }\n  self.emit('pause', who)\n}\n\nDirReader.prototype.resume = function (who) {\n  var self = this\n  if (!self._paused) return\n  who = who || self\n\n  self._paused = false\n  // console.error('DR Emit Resume', self._path)\n  self.emit('resume', who)\n  if (self._paused) {\n    // console.error('DR Re-paused', self._path)\n    return\n  }\n\n  if (self._currentEntry) {\n    if (self._currentEntry.resume) self._currentEntry.resume(who)\n  } else self._read()\n}\n\nDirReader.prototype.emitEntry = function (entry) {\n  this.emit('entry', entry)\n  this.emit('child', entry)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}