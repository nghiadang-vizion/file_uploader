{"ast":null,"code":"module.exports = Writer;\nvar fs = require('graceful-fs');\nvar inherits = require('inherits');\nvar rimraf = require('rimraf');\nvar mkdir = require('mkdirp');\nvar path = require('path');\nvar umask = process.platform === 'win32' ? 0 : process.umask();\nvar getType = require('./get-type.js');\nvar Abstract = require('./abstract.js');\n\n// Must do this *before* loading the child classes\ninherits(Writer, Abstract);\nWriter.dirmode = parseInt('0777', 8) & ~umask;\nWriter.filemode = parseInt('0666', 8) & ~umask;\nvar DirWriter = require('./dir-writer.js');\nvar LinkWriter = require('./link-writer.js');\nvar FileWriter = require('./file-writer.js');\nvar ProxyWriter = require('./proxy-writer.js');\n\n// props is the desired state.  current is optionally the current stat,\n// provided here so that subclasses can avoid statting the target\n// more than necessary.\nfunction Writer(props, current) {\n  var self = this;\n  if (typeof props === 'string') {\n    props = {\n      path: props\n    };\n  }\n\n  // polymorphism.\n  // call fstream.Writer(dir) to get a DirWriter object, etc.\n  var type = getType(props);\n  var ClassType = Writer;\n  switch (type) {\n    case 'Directory':\n      ClassType = DirWriter;\n      break;\n    case 'File':\n      ClassType = FileWriter;\n      break;\n    case 'Link':\n    case 'SymbolicLink':\n      ClassType = LinkWriter;\n      break;\n    case null:\n    default:\n      // Don't know yet what type to create, so we wrap in a proxy.\n      ClassType = ProxyWriter;\n      break;\n  }\n  if (!(self instanceof ClassType)) return new ClassType(props);\n\n  // now get down to business.\n\n  Abstract.call(self);\n  if (!props.path) self.error('Must provide a path', null, true);\n\n  // props is what we want to set.\n  // set some convenience properties as well.\n  self.type = props.type;\n  self.props = props;\n  self.depth = props.depth || 0;\n  self.clobber = props.clobber === false ? props.clobber : true;\n  self.parent = props.parent || null;\n  self.root = props.root || props.parent && props.parent.root || self;\n  self._path = self.path = path.resolve(props.path);\n  if (process.platform === 'win32') {\n    self.path = self._path = self.path.replace(/\\?/g, '_');\n    if (self._path.length >= 260) {\n      self._swallowErrors = true;\n      self._path = '\\\\\\\\?\\\\' + self.path.replace(/\\//g, '\\\\');\n    }\n  }\n  self.basename = path.basename(props.path);\n  self.dirname = path.dirname(props.path);\n  self.linkpath = props.linkpath || null;\n  props.parent = props.root = null;\n\n  // console.error(\"\\n\\n\\n%s setting size to\", props.path, props.size)\n  self.size = props.size;\n  if (typeof props.mode === 'string') {\n    props.mode = parseInt(props.mode, 8);\n  }\n  self.readable = false;\n  self.writable = true;\n\n  // buffer until ready, or while handling another entry\n  self._buffer = [];\n  self.ready = false;\n  self.filter = typeof props.filter === 'function' ? props.filter : null;\n\n  // start the ball rolling.\n  // this checks what's there already, and then calls\n  // self._create() to call the impl-specific creation stuff.\n  self._stat(current);\n}\n\n// Calling this means that it's something we can't create.\n// Just assert that it's already there, otherwise raise a warning.\nWriter.prototype._create = function () {\n  var self = this;\n  fs[self.props.follow ? 'stat' : 'lstat'](self._path, function (er) {\n    if (er) {\n      return self.warn('Cannot create ' + self._path + '\\n' + 'Unsupported type: ' + self.type, 'ENOTSUP');\n    }\n    self._finish();\n  });\n};\nWriter.prototype._stat = function (current) {\n  var self = this;\n  var props = self.props;\n  var stat = props.follow ? 'stat' : 'lstat';\n  var who = self._proxy || self;\n  if (current) statCb(null, current);else fs[stat](self._path, statCb);\n  function statCb(er, current) {\n    if (self.filter && !self.filter.call(who, who, current)) {\n      self._aborted = true;\n      self.emit('end');\n      self.emit('close');\n      return;\n    }\n\n    // if it's not there, great.  We'll just create it.\n    // if it is there, then we'll need to change whatever differs\n    if (er || !current) {\n      return create(self);\n    }\n    self._old = current;\n    var currentType = getType(current);\n\n    // if it's a type change, then we need to clobber or error.\n    // if it's not a type change, then let the impl take care of it.\n    if (currentType !== self.type || self.type === 'File' && current.nlink > 1) {\n      return rimraf(self._path, function (er) {\n        if (er) return self.error(er);\n        self._old = null;\n        create(self);\n      });\n    }\n\n    // otherwise, just handle in the app-specific way\n    // this creates a fs.WriteStream, or mkdir's, or whatever\n    create(self);\n  }\n};\nfunction create(self) {\n  // console.error(\"W create\", self._path, Writer.dirmode)\n\n  // XXX Need to clobber non-dirs that are in the way,\n  // unless { clobber: false } in the props.\n  mkdir(path.dirname(self._path), Writer.dirmode, function (er, made) {\n    // console.error(\"W created\", path.dirname(self._path), er)\n    if (er) return self.error(er);\n\n    // later on, we have to set the mode and owner for these\n    self._madeDir = made;\n    return self._create();\n  });\n}\nfunction endChmod(self, want, current, path, cb) {\n  var wantMode = want.mode;\n  var chmod = want.follow || self.type !== 'SymbolicLink' ? 'chmod' : 'lchmod';\n  if (!fs[chmod]) return cb();\n  if (typeof wantMode !== 'number') return cb();\n  var curMode = current.mode & parseInt('0777', 8);\n  wantMode = wantMode & parseInt('0777', 8);\n  if (wantMode === curMode) return cb();\n  fs[chmod](path, wantMode, cb);\n}\nfunction endChown(self, want, current, path, cb) {\n  // Don't even try it unless root.  Too easy to EPERM.\n  if (process.platform === 'win32') return cb();\n  if (!process.getuid || process.getuid() !== 0) return cb();\n  if (typeof want.uid !== 'number' && typeof want.gid !== 'number') return cb();\n  if (current.uid === want.uid && current.gid === want.gid) return cb();\n  var chown = self.props.follow || self.type !== 'SymbolicLink' ? 'chown' : 'lchown';\n  if (!fs[chown]) return cb();\n  if (typeof want.uid !== 'number') want.uid = current.uid;\n  if (typeof want.gid !== 'number') want.gid = current.gid;\n  fs[chown](path, want.uid, want.gid, cb);\n}\nfunction endUtimes(self, want, current, path, cb) {\n  if (!fs.utimes || process.platform === 'win32') return cb();\n  var utimes = want.follow || self.type !== 'SymbolicLink' ? 'utimes' : 'lutimes';\n  if (utimes === 'lutimes' && !fs[utimes]) {\n    utimes = 'utimes';\n  }\n  if (!fs[utimes]) return cb();\n  var curA = current.atime;\n  var curM = current.mtime;\n  var meA = want.atime;\n  var meM = want.mtime;\n  if (meA === undefined) meA = curA;\n  if (meM === undefined) meM = curM;\n  if (!isDate(meA)) meA = new Date(meA);\n  if (!isDate(meM)) meA = new Date(meM);\n  if (meA.getTime() === curA.getTime() && meM.getTime() === curM.getTime()) return cb();\n  fs[utimes](path, meA, meM, cb);\n}\n\n// XXX This function is beastly.  Break it up!\nWriter.prototype._finish = function () {\n  var self = this;\n  if (self._finishing) return;\n  self._finishing = true;\n\n  // console.error(\" W Finish\", self._path, self.size)\n\n  // set up all the things.\n  // At this point, we're already done writing whatever we've gotta write,\n  // adding files to the dir, etc.\n  var todo = 0;\n  var errState = null;\n  var done = false;\n  if (self._old) {\n    // the times will almost *certainly* have changed.\n    // adds the utimes syscall, but remove another stat.\n    self._old.atime = new Date(0);\n    self._old.mtime = new Date(0);\n    // console.error(\" W Finish Stale Stat\", self._path, self.size)\n    setProps(self._old);\n  } else {\n    var stat = self.props.follow ? 'stat' : 'lstat';\n    // console.error(\" W Finish Stating\", self._path, self.size)\n    fs[stat](self._path, function (er, current) {\n      // console.error(\" W Finish Stated\", self._path, self.size, current)\n      if (er) {\n        // if we're in the process of writing out a\n        // directory, it's very possible that the thing we're linking to\n        // doesn't exist yet (especially if it was intended as a symlink),\n        // so swallow ENOENT errors here and just soldier on.\n        if (er.code === 'ENOENT' && (self.type === 'Link' || self.type === 'SymbolicLink') && process.platform === 'win32') {\n          self.ready = true;\n          self.emit('ready');\n          self.emit('end');\n          self.emit('close');\n          self.end = self._finish = function () {};\n          return;\n        } else return self.error(er);\n      }\n      setProps(self._old = current);\n    });\n  }\n  return;\n  function setProps(current) {\n    todo += 3;\n    endChmod(self, self.props, current, self._path, next('chmod'));\n    endChown(self, self.props, current, self._path, next('chown'));\n    endUtimes(self, self.props, current, self._path, next('utimes'));\n  }\n  function next(what) {\n    return function (er) {\n      // console.error(\"   W Finish\", what, todo)\n      if (errState) return;\n      if (er) {\n        er.fstream_finish_call = what;\n        return self.error(errState = er);\n      }\n      if (--todo > 0) return;\n      if (done) return;\n      done = true;\n\n      // we may still need to set the mode/etc. on some parent dirs\n      // that were created previously.  delay end/close until then.\n      if (!self._madeDir) return end();else endMadeDir(self, self._path, end);\n      function end(er) {\n        if (er) {\n          er.fstream_finish_call = 'setupMadeDir';\n          return self.error(er);\n        }\n        // all the props have been set, so we're completely done.\n        self.emit('end');\n        self.emit('close');\n      }\n    };\n  }\n};\nfunction endMadeDir(self, p, cb) {\n  var made = self._madeDir;\n  // everything *between* made and path.dirname(self._path)\n  // needs to be set up.  Note that this may just be one dir.\n  var d = path.dirname(p);\n  endMadeDir_(self, d, function (er) {\n    if (er) return cb(er);\n    if (d === made) {\n      return cb();\n    }\n    endMadeDir(self, d, cb);\n  });\n}\nfunction endMadeDir_(self, p, cb) {\n  var dirProps = {};\n  Object.keys(self.props).forEach(function (k) {\n    dirProps[k] = self.props[k];\n\n    // only make non-readable dirs if explicitly requested.\n    if (k === 'mode' && self.type !== 'Directory') {\n      dirProps[k] = dirProps[k] | parseInt('0111', 8);\n    }\n  });\n  var todo = 3;\n  var errState = null;\n  fs.stat(p, function (er, current) {\n    if (er) return cb(errState = er);\n    endChmod(self, dirProps, current, p, next);\n    endChown(self, dirProps, current, p, next);\n    endUtimes(self, dirProps, current, p, next);\n  });\n  function next(er) {\n    if (errState) return;\n    if (er) return cb(errState = er);\n    if (--todo === 0) return cb();\n  }\n}\nWriter.prototype.pipe = function () {\n  this.error(\"Can't pipe from writable stream\");\n};\nWriter.prototype.add = function () {\n  this.error(\"Can't add to non-Directory type\");\n};\nWriter.prototype.write = function () {\n  return true;\n};\nfunction objectToString(d) {\n  return Object.prototype.toString.call(d);\n}\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}","map":{"version":3,"names":["module","exports","Writer","fs","require","inherits","rimraf","mkdir","path","umask","process","platform","getType","Abstract","dirmode","parseInt","filemode","DirWriter","LinkWriter","FileWriter","ProxyWriter","props","current","self","type","ClassType","call","error","depth","clobber","parent","root","_path","resolve","replace","length","_swallowErrors","basename","dirname","linkpath","size","mode","readable","writable","_buffer","ready","filter","_stat","prototype","_create","follow","er","warn","_finish","stat","who","_proxy","statCb","_aborted","emit","create","_old","currentType","nlink","made","_madeDir","endChmod","want","cb","wantMode","chmod","curMode","endChown","getuid","uid","gid","chown","endUtimes","utimes","curA","atime","curM","mtime","meA","meM","undefined","isDate","Date","getTime","_finishing","todo","errState","done","setProps","code","end","next","what","fstream_finish_call","endMadeDir","p","d","endMadeDir_","dirProps","Object","keys","forEach","k","pipe","add","write","objectToString","toString"],"sources":["/Users/dangnghia/Documents/vizion/file-uploader/client/node_modules/fstream/lib/writer.js"],"sourcesContent":["module.exports = Writer\n\nvar fs = require('graceful-fs')\nvar inherits = require('inherits')\nvar rimraf = require('rimraf')\nvar mkdir = require('mkdirp')\nvar path = require('path')\nvar umask = process.platform === 'win32' ? 0 : process.umask()\nvar getType = require('./get-type.js')\nvar Abstract = require('./abstract.js')\n\n// Must do this *before* loading the child classes\ninherits(Writer, Abstract)\n\nWriter.dirmode = parseInt('0777', 8) & (~umask)\nWriter.filemode = parseInt('0666', 8) & (~umask)\n\nvar DirWriter = require('./dir-writer.js')\nvar LinkWriter = require('./link-writer.js')\nvar FileWriter = require('./file-writer.js')\nvar ProxyWriter = require('./proxy-writer.js')\n\n// props is the desired state.  current is optionally the current stat,\n// provided here so that subclasses can avoid statting the target\n// more than necessary.\nfunction Writer (props, current) {\n  var self = this\n\n  if (typeof props === 'string') {\n    props = { path: props }\n  }\n\n  // polymorphism.\n  // call fstream.Writer(dir) to get a DirWriter object, etc.\n  var type = getType(props)\n  var ClassType = Writer\n\n  switch (type) {\n    case 'Directory':\n      ClassType = DirWriter\n      break\n    case 'File':\n      ClassType = FileWriter\n      break\n    case 'Link':\n    case 'SymbolicLink':\n      ClassType = LinkWriter\n      break\n    case null:\n    default:\n      // Don't know yet what type to create, so we wrap in a proxy.\n      ClassType = ProxyWriter\n      break\n  }\n\n  if (!(self instanceof ClassType)) return new ClassType(props)\n\n  // now get down to business.\n\n  Abstract.call(self)\n\n  if (!props.path) self.error('Must provide a path', null, true)\n\n  // props is what we want to set.\n  // set some convenience properties as well.\n  self.type = props.type\n  self.props = props\n  self.depth = props.depth || 0\n  self.clobber = props.clobber === false ? props.clobber : true\n  self.parent = props.parent || null\n  self.root = props.root || (props.parent && props.parent.root) || self\n\n  self._path = self.path = path.resolve(props.path)\n  if (process.platform === 'win32') {\n    self.path = self._path = self.path.replace(/\\?/g, '_')\n    if (self._path.length >= 260) {\n      self._swallowErrors = true\n      self._path = '\\\\\\\\?\\\\' + self.path.replace(/\\//g, '\\\\')\n    }\n  }\n  self.basename = path.basename(props.path)\n  self.dirname = path.dirname(props.path)\n  self.linkpath = props.linkpath || null\n\n  props.parent = props.root = null\n\n  // console.error(\"\\n\\n\\n%s setting size to\", props.path, props.size)\n  self.size = props.size\n\n  if (typeof props.mode === 'string') {\n    props.mode = parseInt(props.mode, 8)\n  }\n\n  self.readable = false\n  self.writable = true\n\n  // buffer until ready, or while handling another entry\n  self._buffer = []\n  self.ready = false\n\n  self.filter = typeof props.filter === 'function' ? props.filter : null\n\n  // start the ball rolling.\n  // this checks what's there already, and then calls\n  // self._create() to call the impl-specific creation stuff.\n  self._stat(current)\n}\n\n// Calling this means that it's something we can't create.\n// Just assert that it's already there, otherwise raise a warning.\nWriter.prototype._create = function () {\n  var self = this\n  fs[self.props.follow ? 'stat' : 'lstat'](self._path, function (er) {\n    if (er) {\n      return self.warn('Cannot create ' + self._path + '\\n' +\n        'Unsupported type: ' + self.type, 'ENOTSUP')\n    }\n    self._finish()\n  })\n}\n\nWriter.prototype._stat = function (current) {\n  var self = this\n  var props = self.props\n  var stat = props.follow ? 'stat' : 'lstat'\n  var who = self._proxy || self\n\n  if (current) statCb(null, current)\n  else fs[stat](self._path, statCb)\n\n  function statCb (er, current) {\n    if (self.filter && !self.filter.call(who, who, current)) {\n      self._aborted = true\n      self.emit('end')\n      self.emit('close')\n      return\n    }\n\n    // if it's not there, great.  We'll just create it.\n    // if it is there, then we'll need to change whatever differs\n    if (er || !current) {\n      return create(self)\n    }\n\n    self._old = current\n    var currentType = getType(current)\n\n    // if it's a type change, then we need to clobber or error.\n    // if it's not a type change, then let the impl take care of it.\n    if (currentType !== self.type || self.type === 'File' && current.nlink > 1) {\n      return rimraf(self._path, function (er) {\n        if (er) return self.error(er)\n        self._old = null\n        create(self)\n      })\n    }\n\n    // otherwise, just handle in the app-specific way\n    // this creates a fs.WriteStream, or mkdir's, or whatever\n    create(self)\n  }\n}\n\nfunction create (self) {\n  // console.error(\"W create\", self._path, Writer.dirmode)\n\n  // XXX Need to clobber non-dirs that are in the way,\n  // unless { clobber: false } in the props.\n  mkdir(path.dirname(self._path), Writer.dirmode, function (er, made) {\n    // console.error(\"W created\", path.dirname(self._path), er)\n    if (er) return self.error(er)\n\n    // later on, we have to set the mode and owner for these\n    self._madeDir = made\n    return self._create()\n  })\n}\n\nfunction endChmod (self, want, current, path, cb) {\n  var wantMode = want.mode\n  var chmod = want.follow || self.type !== 'SymbolicLink'\n    ? 'chmod' : 'lchmod'\n\n  if (!fs[chmod]) return cb()\n  if (typeof wantMode !== 'number') return cb()\n\n  var curMode = current.mode & parseInt('0777', 8)\n  wantMode = wantMode & parseInt('0777', 8)\n  if (wantMode === curMode) return cb()\n\n  fs[chmod](path, wantMode, cb)\n}\n\nfunction endChown (self, want, current, path, cb) {\n  // Don't even try it unless root.  Too easy to EPERM.\n  if (process.platform === 'win32') return cb()\n  if (!process.getuid || process.getuid() !== 0) return cb()\n  if (typeof want.uid !== 'number' &&\n    typeof want.gid !== 'number') return cb()\n\n  if (current.uid === want.uid &&\n    current.gid === want.gid) return cb()\n\n  var chown = (self.props.follow || self.type !== 'SymbolicLink')\n    ? 'chown' : 'lchown'\n  if (!fs[chown]) return cb()\n\n  if (typeof want.uid !== 'number') want.uid = current.uid\n  if (typeof want.gid !== 'number') want.gid = current.gid\n\n  fs[chown](path, want.uid, want.gid, cb)\n}\n\nfunction endUtimes (self, want, current, path, cb) {\n  if (!fs.utimes || process.platform === 'win32') return cb()\n\n  var utimes = (want.follow || self.type !== 'SymbolicLink')\n    ? 'utimes' : 'lutimes'\n\n  if (utimes === 'lutimes' && !fs[utimes]) {\n    utimes = 'utimes'\n  }\n\n  if (!fs[utimes]) return cb()\n\n  var curA = current.atime\n  var curM = current.mtime\n  var meA = want.atime\n  var meM = want.mtime\n\n  if (meA === undefined) meA = curA\n  if (meM === undefined) meM = curM\n\n  if (!isDate(meA)) meA = new Date(meA)\n  if (!isDate(meM)) meA = new Date(meM)\n\n  if (meA.getTime() === curA.getTime() &&\n    meM.getTime() === curM.getTime()) return cb()\n\n  fs[utimes](path, meA, meM, cb)\n}\n\n// XXX This function is beastly.  Break it up!\nWriter.prototype._finish = function () {\n  var self = this\n\n  if (self._finishing) return\n  self._finishing = true\n\n  // console.error(\" W Finish\", self._path, self.size)\n\n  // set up all the things.\n  // At this point, we're already done writing whatever we've gotta write,\n  // adding files to the dir, etc.\n  var todo = 0\n  var errState = null\n  var done = false\n\n  if (self._old) {\n    // the times will almost *certainly* have changed.\n    // adds the utimes syscall, but remove another stat.\n    self._old.atime = new Date(0)\n    self._old.mtime = new Date(0)\n    // console.error(\" W Finish Stale Stat\", self._path, self.size)\n    setProps(self._old)\n  } else {\n    var stat = self.props.follow ? 'stat' : 'lstat'\n    // console.error(\" W Finish Stating\", self._path, self.size)\n    fs[stat](self._path, function (er, current) {\n      // console.error(\" W Finish Stated\", self._path, self.size, current)\n      if (er) {\n        // if we're in the process of writing out a\n        // directory, it's very possible that the thing we're linking to\n        // doesn't exist yet (especially if it was intended as a symlink),\n        // so swallow ENOENT errors here and just soldier on.\n        if (er.code === 'ENOENT' &&\n          (self.type === 'Link' || self.type === 'SymbolicLink') &&\n          process.platform === 'win32') {\n          self.ready = true\n          self.emit('ready')\n          self.emit('end')\n          self.emit('close')\n          self.end = self._finish = function () {}\n          return\n        } else return self.error(er)\n      }\n      setProps(self._old = current)\n    })\n  }\n\n  return\n\n  function setProps (current) {\n    todo += 3\n    endChmod(self, self.props, current, self._path, next('chmod'))\n    endChown(self, self.props, current, self._path, next('chown'))\n    endUtimes(self, self.props, current, self._path, next('utimes'))\n  }\n\n  function next (what) {\n    return function (er) {\n      // console.error(\"   W Finish\", what, todo)\n      if (errState) return\n      if (er) {\n        er.fstream_finish_call = what\n        return self.error(errState = er)\n      }\n      if (--todo > 0) return\n      if (done) return\n      done = true\n\n      // we may still need to set the mode/etc. on some parent dirs\n      // that were created previously.  delay end/close until then.\n      if (!self._madeDir) return end()\n      else endMadeDir(self, self._path, end)\n\n      function end (er) {\n        if (er) {\n          er.fstream_finish_call = 'setupMadeDir'\n          return self.error(er)\n        }\n        // all the props have been set, so we're completely done.\n        self.emit('end')\n        self.emit('close')\n      }\n    }\n  }\n}\n\nfunction endMadeDir (self, p, cb) {\n  var made = self._madeDir\n  // everything *between* made and path.dirname(self._path)\n  // needs to be set up.  Note that this may just be one dir.\n  var d = path.dirname(p)\n\n  endMadeDir_(self, d, function (er) {\n    if (er) return cb(er)\n    if (d === made) {\n      return cb()\n    }\n    endMadeDir(self, d, cb)\n  })\n}\n\nfunction endMadeDir_ (self, p, cb) {\n  var dirProps = {}\n  Object.keys(self.props).forEach(function (k) {\n    dirProps[k] = self.props[k]\n\n    // only make non-readable dirs if explicitly requested.\n    if (k === 'mode' && self.type !== 'Directory') {\n      dirProps[k] = dirProps[k] | parseInt('0111', 8)\n    }\n  })\n\n  var todo = 3\n  var errState = null\n  fs.stat(p, function (er, current) {\n    if (er) return cb(errState = er)\n    endChmod(self, dirProps, current, p, next)\n    endChown(self, dirProps, current, p, next)\n    endUtimes(self, dirProps, current, p, next)\n  })\n\n  function next (er) {\n    if (errState) return\n    if (er) return cb(errState = er)\n    if (--todo === 0) return cb()\n  }\n}\n\nWriter.prototype.pipe = function () {\n  this.error(\"Can't pipe from writable stream\")\n}\n\nWriter.prototype.add = function () {\n  this.error(\"Can't add to non-Directory type\")\n}\n\nWriter.prototype.write = function () {\n  return true\n}\n\nfunction objectToString (d) {\n  return Object.prototype.toString.call(d)\n}\n\nfunction isDate (d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]'\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}