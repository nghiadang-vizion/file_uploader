{"ast":null,"code":"var fs = require('graceful-fs');\nvar Promise = require('bluebird');\nvar directory = require('./directory');\nvar Stream = require('stream');\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy) Stream = require('readable-stream');\nmodule.exports = {\n  buffer: function (buffer, options) {\n    var source = {\n      stream: function (offset, length) {\n        var stream = Stream.PassThrough();\n        stream.end(buffer.slice(offset, length));\n        return stream;\n      },\n      size: function () {\n        return Promise.resolve(buffer.length);\n      }\n    };\n    return directory(source, options);\n  },\n  file: function (filename, options) {\n    var source = {\n      stream: function (offset, length) {\n        return fs.createReadStream(filename, {\n          start: offset,\n          end: length && offset + length\n        });\n      },\n      size: function () {\n        return new Promise(function (resolve, reject) {\n          fs.stat(filename, function (err, d) {\n            if (err) reject(err);else resolve(d.size);\n          });\n        });\n      }\n    };\n    return directory(source, options);\n  },\n  url: function (request, params, options) {\n    if (typeof params === 'string') params = {\n      url: params\n    };\n    if (!params.url) throw 'URL missing';\n    params.headers = params.headers || {};\n    var source = {\n      stream: function (offset, length) {\n        var options = Object.create(params);\n        options.headers = Object.create(params.headers);\n        options.headers.range = 'bytes=' + offset + '-' + (length ? length : '');\n        return request(options);\n      },\n      size: function () {\n        return new Promise(function (resolve, reject) {\n          var req = request(params);\n          req.on('response', function (d) {\n            req.abort();\n            if (!d.headers['content-length']) reject(new Error('Missing content length header'));else resolve(d.headers['content-length']);\n          }).on('error', reject);\n        });\n      }\n    };\n    return directory(source, options);\n  },\n  s3: function (client, params, options) {\n    var source = {\n      size: function () {\n        return new Promise(function (resolve, reject) {\n          client.headObject(params, function (err, d) {\n            if (err) reject(err);else resolve(d.ContentLength);\n          });\n        });\n      },\n      stream: function (offset, length) {\n        var d = {};\n        for (var key in params) d[key] = params[key];\n        d.Range = 'bytes=' + offset + '-' + (length ? length : '');\n        return client.getObject(d).createReadStream();\n      }\n    };\n    return directory(source, options);\n  },\n  custom: function (source, options) {\n    return directory(source, options);\n  }\n};","map":{"version":3,"names":["fs","require","Promise","directory","Stream","Writable","prototype","destroy","module","exports","buffer","options","source","stream","offset","length","PassThrough","end","slice","size","resolve","file","filename","createReadStream","start","reject","stat","err","d","url","request","params","headers","Object","create","range","req","on","abort","Error","s3","client","headObject","ContentLength","key","Range","getObject","custom"],"sources":["/Users/dangnghia/Documents/vizion/file-uploader/client/node_modules/unzipper/lib/Open/index.js"],"sourcesContent":["var fs = require('graceful-fs');\nvar Promise = require('bluebird');\nvar directory = require('./directory');\nvar Stream = require('stream');\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = require('readable-stream');\n\nmodule.exports = {\n  buffer: function(buffer, options) {\n    var source = {\n      stream: function(offset, length) {\n        var stream = Stream.PassThrough();\n        stream.end(buffer.slice(offset, length));\n        return stream;\n      },\n      size: function() {\n        return Promise.resolve(buffer.length);\n      }\n    };\n    return directory(source, options);\n  },\n  file: function(filename, options) {\n    var source = {\n      stream: function(offset,length) {\n        return fs.createReadStream(filename,{start: offset, end: length && offset+length});\n      },\n      size: function() {\n        return new Promise(function(resolve,reject) {\n          fs.stat(filename,function(err,d) {\n            if (err)\n              reject(err);\n            else\n              resolve(d.size);\n          });\n        });\n      }\n    };\n    return directory(source, options);\n  },\n\n  url: function(request, params, options) {\n    if (typeof params === 'string')\n      params = {url: params};\n    if (!params.url)\n      throw 'URL missing';\n    params.headers = params.headers || {};\n\n    var source = {\n      stream : function(offset,length) {\n        var options = Object.create(params);\n        options.headers = Object.create(params.headers);\n        options.headers.range = 'bytes='+offset+'-' + (length ? length : '');\n        return request(options);\n      },\n      size: function() {\n        return new Promise(function(resolve,reject) {\n          var req = request(params);\n          req.on('response',function(d) {\n            req.abort();\n            if (!d.headers['content-length'])\n              reject(new Error('Missing content length header'));\n            else\n              resolve(d.headers['content-length']);\n          }).on('error',reject);\n        });\n      }\n    };\n\n    return directory(source, options);\n  },\n\n  s3 : function(client,params, options) {\n    var source = {\n      size: function() {\n        return new Promise(function(resolve,reject) {\n          client.headObject(params, function(err,d) {\n            if (err)\n              reject(err);\n            else\n              resolve(d.ContentLength);\n          });\n        });\n      },\n      stream: function(offset,length) {\n        var d = {};\n        for (var key in params)\n          d[key] = params[key];\n        d.Range = 'bytes='+offset+'-' + (length ? length : '');\n        return client.getObject(d).createReadStream();\n      }\n    };\n\n    return directory(source, options);\n  },\n\n  custom: function(source, options) {\n    return directory(source, options);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}